{
  "version": 3,
  "sources": ["../src/utils/basics.ts", "../src/lib/data.ts", "../src/uiControls/index.ts", "../src/main.ts"],
  "sourcesContent": ["import { Layer, Point } from \"../types\";\r\n\r\nexport function getFreePosition(width: number, height: number, layers: Layer[] = []): [number, number] {\r\n    let x = 0, y = 0, tries = 0, maxTries = 100;\r\n    let overlap: boolean;\r\n\r\n    do {\r\n        overlap = false;\r\n        x = Math.random() * (window.innerWidth - width);\r\n        y = Math.random() * (window.innerHeight - height);\r\n\r\n        for (let l of layers) {\r\n            const rect = [\r\n                Math.min(...l.targetPoints.map(p => p[0])),\r\n                Math.min(...l.targetPoints.map(p => p[1])),\r\n                Math.max(...l.targetPoints.map(p => p[0])),\r\n                Math.max(...l.targetPoints.map(p => p[1]))\r\n            ];\r\n            if (!(x + width < rect[0] || x > rect[2] || y + height < rect[1] || y > rect[3])) {\r\n                overlap = true;\r\n                break;\r\n            }\r\n        }\r\n        tries++;\r\n    } while (overlap && tries < maxTries);\r\n\r\n    return [x, y];\r\n};\r\n\r\nexport function clonePoints(points: number[][]): Point[] {\r\n    return points.map(p => p.slice(0, 2) as Point);\r\n};\r\n\r\nexport function distanceTo(x1: number, y1: number, x2: number, y2: number): number {\r\n    return Math.hypot(x2 - x1, y2 - y1);\r\n};", "export const VERSION = \"0.0.1.3\";", "import { MLMap } from \"../main\";\r\nimport * as Types from \"../types\";\r\nimport { VERSION } from \"../lib/data\";\r\nimport * as utils from \"../utils/basics\";\r\n\r\nexport function initUIControls(dymoMaptastic: MLMap) {\r\n\r\n    // ---- HELP PANEL ----\r\n    const helpPanel = document.createElement(\"div\");\r\n    helpPanel.id = \"controls\";\r\n\r\n    helpPanel.innerHTML = `\r\n    <div style=\"display:flex; justify-content:space-between; align-items:center;\">\r\n  <strong>Controls</strong>\r\n  <button id=\"closeHelp\" style=\"background:#808080;color:white;border:none;padding:2px 6px;cursor:pointer;\">X</button>\r\n</div>\r\n<pre style=\"margin-top:5px;\">\r\nSHIFT-Space: Toggle edit mode\r\n\r\nIn Edit Mode\r\n\r\nclick / drag:       select and move quads/corner points\r\nSHIFT + drag:       move selected quad/corner point with 10x precision\r\nALT + drag:         rotate/scale selected quad\r\nArrow keys:         move selected quad/corner point\r\nSHIFT + Arrow keys: move selected quad/corner point by 10 pixels\r\nALT + Arrow keys:   rotate/scale selected quad\r\n's':                Solo/unsolo selected quad\r\n'c':                Toggle mouse cursor crosshairs\r\n'r':                Rotate selected layer 90 degrees clock-wise\r\n'h':                Flip selected layer horizontally\r\n'v':                Flip selected layer vertically\r\n'b':                Show/Hide projector bounds\r\n'l':                Show/Hide layer labels\r\n'\u232B'/'Del':         Delete selected layer\r\n\r\nMLMap | Version ${VERSION}\r\n</pre>\r\n    `;\r\n\r\n    Object.assign(helpPanel.style, {\r\n        position: \"fixed\",\r\n        top: \"20px\",\r\n        left: \"50%\",\r\n        transform: \"translateX(-50%)\",\r\n        width: \"600px\",\r\n        background: \"#404040\",\r\n        color: \"white\",\r\n        fontFamily: \"monospace\",\r\n        padding: \"10px\",\r\n        border: \"2px solid #808080\",\r\n        zIndex: \"1000001\",\r\n        cursor: \"move\",\r\n        display: \"none\",\r\n        userSelect: \"none\"\r\n    });\r\n\r\n    document.body.appendChild(helpPanel);\r\n\r\n    document.getElementById(\"closeHelp\")?.addEventListener(\"click\", () => {\r\n        helpPanel.style.display = \"none\";\r\n    });\r\n\r\n    // ---- SHAPE PANEL ----\r\n    const shapePanel = document.createElement(\"div\");\r\n    shapePanel.id = \"shapePanel\";\r\n    Object.assign(shapePanel.style, {\r\n        position: \"fixed\",\r\n        top: \"10px\",\r\n        right: \"10px\",\r\n        width: \"200px\",\r\n        background: \"#303030\",\r\n        color: \"white\",\r\n        fontFamily: \"monospace\",\r\n        padding: \"10px\",\r\n        border: \"2px solid #808080\",\r\n        zIndex: \"1000002\",\r\n        display: \"none\"\r\n    });\r\n\r\n    shapePanel.innerHTML = `<strong>Shapes</strong><div id=\"shapeList\"></div>\r\n    <button id=\"addSquare\">Add Square</button>\r\n    <button id=\"addCircle\">Add Circle</button>\r\n    <button id=\"addTriangle\">Add Triangle</button>`;\r\n\r\n    document.body.appendChild(shapePanel);\r\n\r\n    let isDraggingPanel = false;\r\n    let dragOffsetX = 0;\r\n    let dragOffsetY = 0;\r\n\r\n    helpPanel.addEventListener(\"mousedown\", function (e: any) {\r\n        if (e?.target?.id !== \"closeHelp\") {\r\n            isDraggingPanel = true;\r\n            dragOffsetX = e.clientX - helpPanel.offsetLeft;\r\n            dragOffsetY = e.clientY - helpPanel.offsetTop;\r\n        }\r\n    });\r\n\r\n    document.addEventListener(\"mousemove\", function (e) {\r\n        if (isDraggingPanel) {\r\n            helpPanel.style.left = e.clientX - dragOffsetX + \"px\";\r\n            helpPanel.style.top = e.clientY - dragOffsetY + \"px\";\r\n            helpPanel.style.transform = \"\";\r\n        }\r\n    });\r\n\r\n    document.addEventListener(\"mouseup\", function () {\r\n        isDraggingPanel = false;\r\n    });\r\n\r\n    const shapeList = document.getElementById(\"shapeList\") as HTMLDivElement;\r\n    const addSquareBtn = document.getElementById(\"addSquare\") as HTMLButtonElement;\r\n    const addCircleBtn = document.getElementById(\"addCircle\") as HTMLButtonElement;\r\n    const addTriangleBtn = document.getElementById(\"addTriangle\") as HTMLButtonElement;\r\n\r\n    const trianglePoints = new WeakMap<HTMLElement, { sourcePoints: Types.Point[]; targetPoints: Types.Point[] }>();\r\n    let dynamicShapes: Types.Shape[] = [];\r\n\r\n    // ---- SHAPE FUNCTIONS ----\r\n    function createShape(type: \"square\" | \"circle\" | \"triangle\"): void {\r\n        const div = document.createElement(\"div\");\r\n        div.id = `shape_${Date.now()}`;\r\n\r\n        const [x, y] = utils.getFreePosition(100, 100);\r\n        div.style.position = \"fixed\";\r\n        div.style.top = y + \"px\";\r\n        div.style.left = x + \"px\";\r\n        div.style.width = \"100px\";\r\n        div.style.height = \"100px\";\r\n        div.style.background = type === \"triangle\" ? \"transparent\" : \"white\";\r\n        div.style.border = type === \"triangle\" ? \"2px solid white\" : \"none\";\r\n\r\n        if (type === \"circle\") div.style.borderRadius = \"50%\";\r\n        if (type === \"triangle\") {\r\n            div.style.width = \"0\";\r\n            div.style.height = \"0\";\r\n            div.style.borderLeft = \"50px solid transparent\";\r\n            div.style.borderRight = \"50px solid transparent\";\r\n            div.style.borderBottom = \"100px solid white\";\r\n\r\n            dymoMaptastic.addLayer(div,\r\n                utils.clonePoints([\r\n                    [50, 0],\r\n                    [100, 100],\r\n                    [0, 100],\r\n                    [50, 100]\r\n                ]\r\n            ));\r\n        }\r\n\r\n        document.body.appendChild(div);\r\n        dymoMaptastic.addLayer(div);\r\n        dynamicShapes.push({ id: div.id, type, x, y });\r\n        updateShapeList();\r\n        saveShapes();\r\n    };\r\n\r\n    function updateShapeList(): void {\r\n        shapeList.innerHTML = \"\";\r\n        dynamicShapes.forEach(s => {\r\n            const el = document.createElement(\"div\");\r\n            el.style.display = \"flex\";\r\n            el.style.justifyContent = \"space-between\";\r\n            el.style.marginBottom = \"4px\";\r\n            el.innerHTML = `${s.type} <button data-id=\"${s.id}\">Delete</button>`;\r\n            shapeList.appendChild(el);\r\n            el.querySelector(\"button\")?.addEventListener(\"click\", () => deleteShape(s.id));\r\n        });\r\n    }\r\n\r\n    function deleteShape(id: string): void {\r\n        const idx = dynamicShapes.findIndex(s => s.id === id);\r\n        if (idx !== -1) {\r\n            const layer = document.getElementById(id);\r\n            if (layer) layer.remove();\r\n            dynamicShapes.splice(idx, 1);\r\n            updateShapeList();\r\n            saveShapes();\r\n        }\r\n    }\r\n\r\n    function saveShapes(): void {\r\n        localStorage.setItem(\"mlmap.dynamicShapes\", JSON.stringify(dynamicShapes));\r\n    }\r\n\r\n    function loadShapes(): void {\r\n        const stored = localStorage.getItem(\"mlmap.dynamicShapes\");\r\n        if (stored) {\r\n            dynamicShapes = JSON.parse(stored) as Types.Shape[];\r\n            dynamicShapes.forEach(s => restoreShape(s));\r\n            updateShapeList();\r\n        }\r\n    }\r\n\r\n    function restoreShape(s: Types.Shape): void {\r\n        const div = document.createElement(\"div\");\r\n        div.id = s.id;\r\n\r\n        const x = s.x ?? Math.random() * (window.innerWidth - 100);\r\n        const y = s.y ?? Math.random() * (window.innerHeight - 100);\r\n\r\n        div.style.position = \"fixed\";\r\n        div.style.top = y + \"px\";\r\n        div.style.left = x + \"px\";\r\n        div.style.width = \"100px\";\r\n        div.style.height = \"100px\";\r\n        div.style.background = s.type === \"triangle\" ? \"transparent\" : \"white\";\r\n        div.style.border = s.type === \"triangle\" ? \"2px solid white\" : \"none\";\r\n\r\n        if (s.type === \"circle\") div.style.borderRadius = \"50%\";\r\n        if (s.type === \"triangle\") {\r\n            div.style.width = \"0\";\r\n            div.style.height = \"0\";\r\n            div.style.borderLeft = \"50px solid transparent\";\r\n            div.style.borderRight = \"50px solid transparent\";\r\n            div.style.borderBottom = \"100px solid white\";\r\n        }\r\n\r\n        document.body.appendChild(div);\r\n        dymoMaptastic.addLayer(div);\r\n    }\r\n\r\n    // ---- LISTENERS ----\r\n    addSquareBtn.addEventListener(\"click\", () => createShape(\"square\"));\r\n    addCircleBtn.addEventListener(\"click\", () => createShape(\"circle\"));\r\n    addTriangleBtn.addEventListener(\"click\", () => createShape(\"triangle\"));\r\n\r\n    document.addEventListener(\"keydown\", e => {\r\n        if (e.shiftKey && e.code === \"Space\") {\r\n            e.preventDefault();\r\n            helpPanel.style.display = helpPanel.style.display === \"none\" ? \"block\" : \"none\";\r\n            shapePanel.style.display = shapePanel.style.display === \"none\" ? \"block\" : \"none\";\r\n        }\r\n    });\r\n\r\n    // Override edit mode.\r\n    const originalSetConfigEnabled = dymoMaptastic.setConfigEnabled;\r\n    dymoMaptastic.setConfigEnabled = function (enabled: boolean) {\r\n        originalSetConfigEnabled(enabled);\r\n        shapePanel.style.display = enabled ? \"block\" : \"none\";\r\n    };\r\n\r\n    loadShapes();\r\n\r\n    const observer = new MutationObserver(mutations => {\r\n        for (const mutation of mutations) {\r\n            if (mutation.type === \"childList\" && mutation.removedNodes.length > 0) {\r\n                mutation.removedNodes.forEach(node => {\r\n                    if (node instanceof HTMLElement) {\r\n                        const idx = dynamicShapes.findIndex(s => s.id === node.id);\r\n                        if (idx !== -1) {\r\n                            dynamicShapes.splice(idx, 1);\r\n                            updateShapeList();\r\n                            saveShapes();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    observer.observe(document.body, { childList: true, subtree: true });\r\n}", "import * as Types from \"./types\";\r\nimport * as utils from \"./utils/basics\";\r\nimport { initUIControls } from \"./uiControls\";\r\n\r\nconst solve = (() => {\r\n    function r(t: any, nArr: any, o: number, eFunc: any) {\r\n        if (o === nArr.length - 1) return eFunc(t);\r\n        let f: any;\r\n        const u = nArr[o];\r\n        const cArr = Array(u);\r\n        for (f = u - 1; f >= 0; --f) cArr[f] = r(t[f], nArr, o + 1, eFunc);\r\n        return cArr;\r\n    }\r\n    function tfn(rObj: any) {\r\n        const res: number[] = [];\r\n        while (typeof rObj === \"object\") {\r\n            res.push(rObj.length);\r\n            rObj = rObj[0];\r\n        }\r\n        return res;\r\n    }\r\n    function nfn(rObj: any) {\r\n        let n: any, o: any;\r\n        if (typeof rObj === \"object\") {\r\n            n = rObj[0];\r\n            if (typeof n === \"object\") {\r\n                o = n[0];\r\n                return (typeof o === \"object\") ? tfn(rObj) : [rObj.length, n.length];\r\n            }\r\n            return [rObj.length];\r\n        }\r\n        return [];\r\n    }\r\n    function ofn(rArr: any[]) {\r\n        let i: number;\r\n        const n = rArr.length;\r\n        const out = Array(n);\r\n        for (i = n - 1; i >= 0; --i) out[i] = rArr[i];\r\n        return out;\r\n    }\r\n    function efn(tVal: any) {\r\n        return typeof tVal !== \"object\" ? tVal : r(tVal, nfn(tVal), 0, ofn);\r\n    }\r\n    function ffn(rArr: any, tFlag?: boolean) {\r\n        tFlag = tFlag || false;\r\n        let n: any, o: any, fVar: any, uVar: any, a: any, h: any, i: any, l: any, g: any;\r\n        let v = rArr.length;\r\n        const y = v - 1;\r\n        const b = new Array(v);\r\n        if (!tFlag) rArr = efn(rArr);\r\n        for (fVar = 0; fVar < v; ++fVar) {\r\n            i = fVar;\r\n            h = rArr[fVar];\r\n            g = c(h[fVar]);\r\n            for (o = fVar + 1; o < v; ++o) {\r\n                uVar = c(rArr[o][fVar]);\r\n                if (uVar > g) { g = uVar; i = o; }\r\n            }\r\n            b[fVar] = i;\r\n            if (i != fVar) { rArr[fVar] = rArr[i]; rArr[i] = h; h = rArr[fVar]; }\r\n            a = h[fVar];\r\n            for (n = fVar + 1; n < v; ++n) rArr[n][fVar] /= a;\r\n            for (n = fVar + 1; n < v; ++n) {\r\n                l = rArr[n];\r\n                for (o = fVar + 1; o < y; ++o) { l[o] -= l[fVar] * h[o]; ++o; l[o] -= l[fVar] * h[o]; }\r\n                if (o === y) l[o] -= l[fVar] * h[o];\r\n            }\r\n        }\r\n        return { LU: rArr, P: b };\r\n    }\r\n    function ufn(rObj: any, tArr: any) {\r\n        let n: any, o: any, fVar: any, uVar: any, cVar: any;\r\n        const a = rObj.LU;\r\n        const h = a.length;\r\n        const iArr = efn(tArr);\r\n        const lArr = rObj.P;\r\n        for (n = h - 1; n >= 0; --n) iArr[n] = tArr[n];\r\n        for (n = 0; n < h; ++n) {\r\n            fVar = lArr[n];\r\n            if (lArr[n] !== n) { cVar = iArr[n]; iArr[n] = iArr[fVar]; iArr[fVar] = cVar; }\r\n            uVar = a[n];\r\n            for (o = 0; o < n; ++o) iArr[n] -= iArr[o] * uVar[o];\r\n        }\r\n        for (n = h - 1; n >= 0; --n) {\r\n            uVar = a[n];\r\n            for (o = n + 1; o < h; ++o) iArr[n] -= iArr[o] * uVar[o];\r\n            iArr[n] /= uVar[n];\r\n        }\r\n        return iArr;\r\n    }\r\n    const c = Math.abs;\r\n    return function (rMat: any, bVec: any, nOpt?: any) {\r\n        return ufn(ffn(rMat, nOpt), bVec);\r\n    };\r\n})();\r\n\r\n// ------------------- Global variables -------------------\r\nlet historyStack: string[] = [];\r\nconst historyLimit = 50;\r\n\r\nexport class MLMap {\r\n    private showLayerNames: boolean;\r\n    private showCrosshairs: boolean;\r\n    private showScreenBounds: boolean;\r\n    private autoSave: boolean;\r\n    private autoLoad: boolean;\r\n    private layerList: (HTMLElement | string)[];\r\n    private layoutChangeListener: () => void;\r\n    private localStorageKey = \"mlmap.layers\";\r\n\r\n    private canvas: HTMLCanvasElement;\r\n    private context: CanvasRenderingContext2D;\r\n\r\n    private layers: Types.Layer[] = [];\r\n    private configActive = false;\r\n\r\n    private dragging = false;\r\n    private dragOffset: [number, number] = [0, 0];\r\n\r\n    private selectedLayer: Types.Layer | null = null;\r\n    private selectedPoint: number[] | null = null;\r\n    private selectionRadius = 20;\r\n    private hoveringPoint: number[] | null = null;\r\n    private hoveringLayer: Types.Layer | null = null;\r\n    private isLayerSoloed = false;\r\n\r\n    private mousePosition: [number, number] = [0, 0];\r\n    private mouseDelta: [number, number] = [0, 0];\r\n    private mouseDownPoint: [number, number] = [0, 0];\r\n\r\n    constructor(config: Types.MLMapConfig = {}) {\r\n        this.keyDown = this.keyDown.bind(this);\r\n        this.setConfigEnabled = this.setConfigEnabled.bind(this);\r\n        this.showLayerNames = this.getProp(config, \"labels\", true);\r\n        this.showCrosshairs = this.getProp(config, \"crosshairs\", false);\r\n        this.showScreenBounds = this.getProp(config, \"screenbounds\", false);\r\n        this.autoSave = this.getProp(config, \"autoSave\", true);\r\n        this.autoLoad = this.getProp(config, \"autoLoad\", true);\r\n        this.layerList = this.getProp(config, \"layers\", []);\r\n        this.layoutChangeListener = this.getProp(config, \"onchange\", () => { });\r\n\r\n        this.canvas = document.createElement(\"canvas\");\r\n        this.context = this.canvas.getContext(\"2d\")!;\r\n\r\n        this.initCanvas();\r\n        this.loadSettings();\r\n\r\n        for (let item of this.layerList) {\r\n            if (item instanceof HTMLElement || typeof item === \"string\") this.addLayer(item);\r\n        }\r\n\r\n        if (this.autoLoad) this.loadSettings();\r\n        this.pushHistory();\r\n\r\n        const observer = new MutationObserver((mutationsList) => {\r\n            mutationsList.forEach((mutation) => {\r\n                mutation.removedNodes.forEach((node) => {\r\n                    this.layers.forEach((layer, i) => {\r\n                        if (layer.element === node) {\r\n                            if (layer.overlay) layer.overlay.remove();\r\n                            this.layers.splice(i, 1);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        });\r\n        observer.observe(document.body, { childList: true, subtree: true });\r\n    };\r\n\r\n    // ---------------- Internal Methods ----------------\r\n    private getProp(cfg: any, key: string, defaultVal: any) {\r\n        return cfg && cfg.hasOwnProperty(key) && cfg[key] !== null ? cfg[key] : defaultVal;\r\n    };\r\n\r\n    private initCanvas() {\r\n        this.canvas.style.display = \"none\";\r\n        this.canvas.style.position = \"fixed\";\r\n        this.canvas.style.top = \"0px\";\r\n        this.canvas.style.left = \"0px\";\r\n        this.canvas.style.zIndex = \"1000000\";\r\n\r\n        this.context = this.canvas.getContext(\"2d\")!;\r\n        document.body.appendChild(this.canvas);\r\n\r\n        window.addEventListener(\"resize\", this.resize.bind(this));\r\n        window.addEventListener(\"mousemove\", this.mouseMove.bind(this));\r\n        window.addEventListener(\"mouseup\", this.mouseUp.bind(this));\r\n        window.addEventListener(\"mousedown\", this.mouseDown.bind(this));\r\n        window.addEventListener(\"keydown\", this.keyDown.bind(this));\r\n\r\n        this.resize();\r\n    };\r\n\r\n    private pushHistory() {\r\n        const snapshot = this.getLayout();\r\n        historyStack.push(JSON.stringify(snapshot));\r\n        if (historyStack.length > historyLimit) historyStack.shift();\r\n    };\r\n\r\n    private saveSettings() {\r\n        const data = {\r\n            version: \"1.0\",\r\n            layout: this.getLayout()\r\n        };\r\n        localStorage.setItem(this.localStorageKey, JSON.stringify(data));\r\n    };\r\n\r\n    private loadSettings() {\r\n        const raw = localStorage.getItem(this.localStorageKey);\r\n        if (raw) {\r\n            try {\r\n                const data = JSON.parse(raw);\r\n                if (data.version === \"1.0\" && data.layout) this.setLayout(data.layout);\r\n                else console.warn(\"MLMap: localStorage version mismatch, skipping load.\");\r\n            } catch (e) {\r\n                console.error(\"MLMap: Failed to parse layout from localStorage.\", e);\r\n            }\r\n        }\r\n    };\r\n\r\n    private resize() {\r\n        this.canvas.width = window.innerWidth;\r\n        this.canvas.height = window.innerHeight;\r\n        this.draw();\r\n    };\r\n\r\n    private pointInTriangle(p: Types.Point, a: Types.Point, b: Types.Point, c: Types.Point) {\r\n        let s = a[1] * c[0] - a[0] * c[1] + (c[1] - a[1]) * p[0] + (a[0] - c[0]) * p[1];\r\n        let t = a[0] * b[1] - a[1] * b[0] + (a[1] - b[1]) * p[0] + (b[0] - a[0]) * p[1];\r\n        if ((s < 0) !== (t < 0)) return false;\r\n        let A = -b[1] * c[0] + a[1] * (c[0] - b[0]) + a[0] * (b[1] - c[1]) + b[0] * c[1];\r\n        if (A < 0) { s = -s; t = -t; A = -A; }\r\n        return s > 0 && t > 0 && (s + t) < A;\r\n    };\r\n\r\n    private pointInLayer(point: Types.Point, layer: Types.Layer) {\r\n        const [a, b, c, d] = layer.targetPoints;\r\n        return this.pointInTriangle(point, a, b, c) || this.pointInTriangle(point, d, a, c);\r\n    };\r\n\r\n    private updateTransform() {\r\n        const prefixes = [\"\", \"-webkit-\", \"-moz-\", \"-ms-\", \"-o-\"];\r\n        let transformProp = \"transform\";\r\n        for (const pre of prefixes) {\r\n            const candidate = pre + \"transform\";\r\n            if (candidate in (document.body.style as any)) { transformProp = candidate; break; }\r\n        }\r\n\r\n        for (let l = 0; l < this.layers.length; l++) {\r\n            const a: number[][] = [];\r\n            const b: number[] = [];\r\n            for (let i = 0, n = this.layers[l].sourcePoints.length; i < n; ++i) {\r\n                const s = this.layers[l].sourcePoints[i];\r\n                const t = this.layers[l].targetPoints[i];\r\n                a.push([s[0], s[1], 1, 0, 0, 0, -s[0] * t[0], -s[1] * t[0]]);\r\n                b.push(t[0]);\r\n                a.push([0, 0, 0, s[0], s[1], 1, -s[0] * t[1], -s[1] * t[1]]);\r\n                b.push(t[1]);\r\n            }\r\n\r\n            const X = solve(a, b, true);\r\n            const matrix = [\r\n                X[0], X[3], 0, X[6],\r\n                X[1], X[4], 0, X[7],\r\n                0, 0, 1, 0,\r\n                X[2], X[5], 0, 1\r\n            ];\r\n\r\n            const style = this.layers[l].element.style;\r\n            style.setProperty(transformProp, `matrix3d(${matrix.join(\",\")})`);\r\n            style.setProperty(`${transformProp}-origin`, \"0px 0px 0px\");\r\n        }\r\n    };\r\n\r\n    private rotateLayer(layer: Types.Layer, angle: number) {\r\n        var s = Math.sin(angle);\r\n        var c = Math.cos(angle);\r\n\r\n        var centerPoint = [0, 0];\r\n        for (var p = 0; p < layer.targetPoints.length; p++) {\r\n            centerPoint[0] += layer.targetPoints[p][0];\r\n            centerPoint[1] += layer.targetPoints[p][1];\r\n        }\r\n\r\n        centerPoint[0] /= 4;\r\n        centerPoint[1] /= 4;\r\n\r\n        for (var p = 0; p < layer.targetPoints.length; p++) {\r\n            var px = layer.targetPoints[p][0] - centerPoint[0];\r\n            var py = layer.targetPoints[p][1] - centerPoint[1];\r\n\r\n            layer.targetPoints[p][0] = (px * c) - (py * s) + centerPoint[0];\r\n            layer.targetPoints[p][1] = (px * s) + (py * c) + centerPoint[1];\r\n        }\r\n    };\r\n\r\n    private scaleLayer(layer: Types.Layer, scale: number) {\r\n        var centerPoint = [0, 0];\r\n        for (var p = 0; p < layer.targetPoints.length; p++) {\r\n            centerPoint[0] += layer.targetPoints[p][0];\r\n            centerPoint[1] += layer.targetPoints[p][1];\r\n        }\r\n\r\n        centerPoint[0] /= 4;\r\n        centerPoint[1] /= 4;\r\n\r\n        for (var p = 0; p < layer.targetPoints.length; p++) {\r\n            var px = layer.targetPoints[p][0] - centerPoint[0];\r\n            var py = layer.targetPoints[p][1] - centerPoint[1];\r\n\r\n            layer.targetPoints[p][0] = (px * scale) + centerPoint[0];\r\n            layer.targetPoints[p][1] = (py * scale) + centerPoint[1];\r\n        }\r\n    };\r\n\r\n    private undo() {\r\n        if (historyStack.length > 1) {\r\n            historyStack.pop();\r\n            var last = JSON.parse(historyStack[historyStack.length - 1]);\r\n            this.setLayout(last);\r\n            this.draw();\r\n            if (this.autoSave) this.saveSettings();\r\n        }\r\n    };\r\n\r\n    private swapLayerPoints(layerPoints: Types.Point[], index1: number, index2: number) {\r\n        var tx = layerPoints[index1][0];\r\n        var ty = layerPoints[index1][1];\r\n        layerPoints[index1][0] = layerPoints[index2][0];\r\n        layerPoints[index1][1] = layerPoints[index2][1];\r\n        layerPoints[index2][0] = tx;\r\n        layerPoints[index2][1] = ty;\r\n    };\r\n\r\n    // ---------------- Public API ----------------\r\n    public addLayer(target: HTMLElement | string, targetPoints?: number[][]) {\r\n        let element: HTMLElement | null = null;\r\n\r\n        if (typeof target === \"string\") {\r\n            element = document.getElementById(target);\r\n            if (!element) throw new Error(\"MLMap: No element found with id: \" + target);\r\n        } else if (target instanceof HTMLElement) element = target;\r\n        else throw new Error(\"MLMap: Invalid target\");\r\n\r\n        // Check if layer exists.\r\n        for (let n = 0; n < this.layers.length; n++) {\r\n            if (this.layers[n].element.id === element.id) {\r\n                if (targetPoints) this.layers[n].targetPoints = utils.clonePoints(targetPoints);\r\n                return;\r\n            }\r\n        }\r\n\r\n        element.style.position = \"fixed\";\r\n        element.style.display = \"block\";\r\n        element.style.top = \"0px\";\r\n        element.style.left = \"0px\";\r\n        element.style.padding = \"0px\";\r\n        element.style.margin = \"0px\";\r\n\r\n        const layer: Types.Layer = {\r\n            visible: true,\r\n            element,\r\n            width: element.clientWidth,\r\n            height: element.clientHeight,\r\n            sourcePoints: [\r\n                [0, 0],\r\n                [element.clientWidth, 0],\r\n                [element.clientWidth, element.clientHeight],\r\n                [0, element.clientHeight]\r\n            ],\r\n            targetPoints: []\r\n        };\r\n\r\n        if (targetPoints) layer.targetPoints = utils.clonePoints(targetPoints);\r\n        else {\r\n            const [x, y] = utils.getFreePosition(layer.width, layer.height, this.layers);\r\n            layer.targetPoints = [\r\n                [x, y],\r\n                [x + layer.width, y],\r\n                [x + layer.width, y + layer.height],\r\n                [x, y + layer.height]\r\n            ];\r\n        }\r\n\r\n        this.layers.push(layer);\r\n        this.updateTransform();\r\n    };\r\n\r\n    public removeLayer(target: HTMLElement | string) {\r\n        const element = typeof target === \"string\" ? document.getElementById(target) : target;\r\n        if (!element) return;\r\n\r\n        for (let i = this.layers.length - 1; i >= 0; i--) {\r\n            if (this.layers[i].element === element) {\r\n                if (this.layers[i].overlay) this.layers[i].overlay?.remove();\r\n                this.layers.splice(i, 1);\r\n            }\r\n        }\r\n        this.updateTransform();\r\n    };\r\n\r\n    public setLayout(layout: any) {\r\n        for (var i = 0; i < layout.length; i++) {\r\n            var exists = false;\r\n            for (var n = 0; n < this.layers.length; n++) {\r\n                if (this.layers[n].element.id == layout[i].id) {\r\n                    console.log(\"Setting points.\");\r\n                    this.layers[n].targetPoints = utils.clonePoints(layout[i].targetPoints);\r\n                    this.layers[n].sourcePoints = utils.clonePoints(layout[i].sourcePoints);\r\n                    exists = true;\r\n                }\r\n            }\r\n\r\n            if (!exists) {\r\n                var element = document.getElementById(layout[i].id);\r\n                if (element) this.addLayer(element, layout[i].targetPoints);\r\n                else console.log(`Maptastic: Can\"t find element: ` + layout[i].id);\r\n            } else console.log(`Maptastic: Element \"\" + layout[i].id + \"\" is already mapped.`);\r\n        }\r\n        this.updateTransform();\r\n        this.draw();\r\n    };\r\n\r\n    public getLayout() {\r\n        var layout = [];\r\n        for (var i = 0; i < this.layers.length; i++) {\r\n            layout.push({\r\n                \"id\": this.layers[i].element.id,\r\n                \"targetPoints\": utils.clonePoints(this.layers[i].targetPoints),\r\n                \"sourcePoints\": utils.clonePoints(this.layers[i].sourcePoints)\r\n            });\r\n        }\r\n        return layout;\r\n    };\r\n\r\n    public setConfigEnabled(enabled: boolean) {\r\n        this.configActive = enabled;\r\n        this.canvas.style.display = enabled ? \"block\" : \"none\";\r\n\r\n        if (!enabled) {\r\n            this.selectedPoint = null;\r\n            this.selectedLayer = null;\r\n            this.dragging = false;\r\n            this.showScreenBounds = false;\r\n        } else this.draw();\r\n    };\r\n\r\n    // ---------------- Utils ----------------\r\n    private draw() {\r\n        if (!this.configActive) return;\r\n\r\n        this.context.strokeStyle = \"red\";\r\n        this.context.lineWidth = 2;\r\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        for (let i = 0; i < this.layers.length; i++) {\r\n            const layer = this.layers[i];\r\n\r\n            if (layer.visible) {\r\n                layer.element.style.visibility = \"visible\";\r\n\r\n                // Draw layer rectangles.\r\n                this.context.beginPath();\r\n                if (layer === this.hoveringLayer) this.context.strokeStyle = \"red\";\r\n                else if (layer === this.selectedLayer) this.context.strokeStyle = \"red\";\r\n                else this.context.strokeStyle = \"white\";\r\n\r\n                this.context.moveTo(layer.targetPoints[0][0], layer.targetPoints[0][1]);\r\n                for (let p = 0; p < layer.targetPoints.length; p++) {\r\n                    this.context.lineTo(layer.targetPoints[p][0], layer.targetPoints[p][1]);\r\n                }\r\n                this.context.lineTo(layer.targetPoints[3][0], layer.targetPoints[3][1]);\r\n                this.context.closePath();\r\n                this.context.stroke();\r\n\r\n                // Draw corner points.\r\n                const centerPoint: [number, number] = [0, 0];\r\n                for (let p = 0; p < layer.targetPoints.length; p++) {\r\n                    if (layer.targetPoints[p] === this.hoveringPoint) this.context.strokeStyle = \"red\";\r\n                    else if (layer.targetPoints[p] === this.selectedPoint) this.context.strokeStyle = \"red\";\r\n                    else this.context.strokeStyle = \"white\";\r\n\r\n                    centerPoint[0] += layer.targetPoints[p][0];\r\n                    centerPoint[1] += layer.targetPoints[p][1];\r\n\r\n                    this.context.beginPath();\r\n                    this.context.arc(layer.targetPoints[p][0], layer.targetPoints[p][1], this.selectionRadius / 2, 0, 2 * Math.PI, false);\r\n                    this.context.stroke();\r\n                }\r\n\r\n                // Average corners.\r\n                centerPoint[0] /= 4;\r\n                centerPoint[1] /= 4;\r\n\r\n                if (this.showLayerNames) {\r\n                    const label = layer.element.id.toUpperCase();\r\n                    this.context.font = \"16px sans-serif\";\r\n                    this.context.textAlign = \"center\";\r\n                    const metrics = this.context.measureText(label);\r\n                    const size: [number, number] = [metrics.width + 8, 16 + 16];\r\n\r\n                    this.context.fillStyle = \"white\";\r\n\r\n                    const marginY = window.innerHeight * 0.01; // 1vh.\r\n                    let textX = centerPoint[0];\r\n                    let textY = centerPoint[1];\r\n\r\n                    if (layer.width < metrics.width + 10 || layer.height < 20) {\r\n                        textY = centerPoint[1] - layer.height / 2 - 10 - marginY;\r\n                        if (textY - size[1] / 2 < marginY) {\r\n                            textY = centerPoint[1] + layer.height / 2 + 20 + marginY;\r\n                        }\r\n                    }\r\n\r\n                    this.context.fillRect(textX - size[0] / 2, textY - size[1] / 2, size[0], size[1]);\r\n                    this.context.fillStyle = \"black\";\r\n                    this.context.font = \"14px sans-serif\";\r\n                    this.context.fillText(label, textX, textY);\r\n                }\r\n            } else layer.element.style.visibility = \"hidden\";\r\n        }\r\n\r\n        // Draw mouse crosshairs.\r\n        if (this.showCrosshairs) {\r\n            this.context.strokeStyle = \"yellow\";\r\n            this.context.lineWidth = 1;\r\n            this.context.beginPath();\r\n            this.context.moveTo(this.mousePosition[0], 0);\r\n            this.context.lineTo(this.mousePosition[0], this.canvas.height);\r\n            this.context.moveTo(0, this.mousePosition[1]);\r\n            this.context.lineTo(this.canvas.width, this.mousePosition[1]);\r\n            this.context.stroke();\r\n        }\r\n\r\n        if (this.showScreenBounds) {\r\n            this.context.fillStyle = \"black\";\r\n            this.context.lineWidth = 4;\r\n            this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n            this.context.strokeStyle = \"#909090\";\r\n            this.context.beginPath();\r\n            const stepX = this.canvas.width / 10;\r\n            const stepY = this.canvas.height / 10;\r\n\r\n            for (let i = 0; i < 10; i++) {\r\n                this.context.moveTo(i * stepX, 0);\r\n                this.context.lineTo(i * stepX, this.canvas.height);\r\n                this.context.moveTo(0, i * stepY);\r\n                this.context.lineTo(this.canvas.width, i * stepY);\r\n            }\r\n            this.context.stroke();\r\n\r\n            this.context.strokeStyle = \"white\";\r\n            this.context.strokeRect(2, 2, this.canvas.width - 4, this.canvas.height - 4);\r\n\r\n            const fontSize = Math.round(stepY * 0.6);\r\n            this.context.font = `${fontSize}px mono, sans-serif`;\r\n            this.context.fillRect(stepX * 2 + 2, stepY * 3 + 2, this.canvas.width - stepX * 4 - 4, this.canvas.height - stepY * 6 - 4);\r\n            this.context.fillStyle = \"white\";\r\n            this.context.font = \"20px sans-serif\";\r\n            this.context.fillText(`${this.canvas.width} x ${this.canvas.height}`, this.canvas.width / 2, this.canvas.height / 2 + (fontSize * 0.75));\r\n            this.context.fillText(\"display size\", this.canvas.width / 2, this.canvas.height / 2 - (fontSize * 0.75));\r\n        }\r\n    };\r\n\r\n    private mouseMove(event: MouseEvent) {\r\n        if (!this.configActive) return;\r\n\r\n        event.preventDefault();\r\n\r\n        this.mouseDelta[0] = event.clientX - this.mousePosition[0];\r\n        this.mouseDelta[1] = event.clientY - this.mousePosition[1];\r\n\r\n        this.mousePosition[0] = event.clientX;\r\n        this.mousePosition[1] = event.clientY;\r\n\r\n        if (this.dragging) {\r\n            const scale = event.shiftKey ? 0.1 : 1;\r\n\r\n            if (this.selectedPoint) {\r\n                if (event.shiftKey) this.scaleLayer(this.selectedLayer!, 1 + this.mouseDelta[0] * 0.01);\r\n                else {\r\n                    this.selectedPoint[0] += this.mouseDelta[0] * scale;\r\n                    this.selectedPoint[1] += this.mouseDelta[1] * scale;\r\n                }\r\n            } else if (this.selectedLayer) {\r\n                if (event.altKey) this.rotateLayer(this.selectedLayer, this.mouseDelta[0] * (0.01 * scale));\r\n                if (event.ctrlKey) this.scaleLayer(this.selectedLayer, (this.mouseDelta[1] * (-0.005 * scale)) + 1.0);\r\n                else {\r\n                    for (let i = 0; i < this.selectedLayer.targetPoints.length; i++) {\r\n                        this.selectedLayer.targetPoints[i][0] += this.mouseDelta[0] * scale;\r\n                        this.selectedLayer.targetPoints[i][1] += this.mouseDelta[1] * scale;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.updateTransform();\r\n            if (this.autoSave) this.saveSettings();\r\n            this.draw();\r\n            this.layoutChangeListener();\r\n            return;\r\n        }\r\n\r\n        this.canvas.style.cursor = \"default\";\r\n        this.hoveringPoint = null;\r\n        this.hoveringLayer = null;\r\n\r\n        // Priority: first check of points.\r\n        for (let i = this.layers.length - 1; i >= 0; i--) {\r\n            const layer = this.layers[i];\r\n            if (!layer.visible) continue;\r\n\r\n            for (let p = 0; p < layer.targetPoints.length; p++) {\r\n                const point = layer.targetPoints[p];\r\n                if (utils.distanceTo(point[0], point[1], event.clientX, event.clientY) < this.selectionRadius) {\r\n                    this.hoveringPoint = point;\r\n                    this.hoveringLayer = layer;\r\n                    this.canvas.style.cursor = \"pointer\";\r\n                    break;\r\n                }\r\n            }\r\n            if (this.hoveringPoint) break;\r\n        }\r\n\r\n        // If there is no point to hover over, check entire layer.\r\n        if (!this.hoveringPoint) {\r\n            for (let i = this.layers.length - 1; i >= 0; i--) {\r\n                const layer = this.layers[i];\r\n                if (!layer.visible) continue;\r\n                if (this.pointInLayer(this.mousePosition, layer)) {\r\n                    this.hoveringLayer = layer;\r\n                    this.canvas.style.cursor = \"pointer\";\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.draw();\r\n    }\r\n\r\n    private mouseDown(event: MouseEvent) {\r\n        if (!this.configActive) return;\r\n\r\n        this.mouseDownPoint = [event.clientX, event.clientY];\r\n        this.selectedPoint = null;\r\n        this.selectedLayer = null;\r\n\r\n        // First select a point if you are on one.\r\n        for (let i = this.layers.length - 1; i >= 0; i--) {\r\n            const layer = this.layers[i];\r\n            if (!layer.visible) continue;\r\n\r\n            for (let p = 0; p < layer.targetPoints.length; p++) {\r\n                const point = layer.targetPoints[p];\r\n                if (utils.distanceTo(point[0], point[1], event.clientX, event.clientY) < this.selectionRadius) {\r\n                    this.selectedPoint = point;\r\n                    this.selectedLayer = layer;\r\n                    break;\r\n                }\r\n            }\r\n            if (this.selectedLayer) break;\r\n        }\r\n\r\n        // If there is no point, select by layer.\r\n        if (!this.selectedLayer) {\r\n            for (let i = this.layers.length - 1; i >= 0; i--) {\r\n                const layer = this.layers[i];\r\n                if (!layer.visible) continue;\r\n                if (this.pointInLayer([event.clientX, event.clientY], layer)) {\r\n                    this.selectedLayer = layer;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.selectedLayer) {\r\n            this.dragging = true;\r\n            this.draw();\r\n        }\r\n    }\r\n\r\n\r\n    private mouseUp(_event: MouseEvent) {\r\n        if (!this.configActive) return;\r\n\r\n        if (this.dragging) {\r\n            this.pushHistory();\r\n            if (this.autoSave) this.saveSettings();\r\n        }\r\n\r\n        this.dragging = false;\r\n        this.selectedPoint = null;\r\n    }\r\n\r\n    private keyDown(event: KeyboardEvent) {\r\n        if (!this.configActive) {\r\n            if (event.keyCode == 32 && event.shiftKey) {\r\n                this.setConfigEnabled(true);\r\n                return;\r\n            } else return;\r\n        }\r\n\r\n        var key = event.keyCode;\r\n\r\n        var increment = event.shiftKey ? 10 : 1;\r\n        var dirty = false;\r\n        var delta = [0, 0];\r\n\r\n        console.log(key);\r\n        switch (key) {\r\n\r\n            case 32: // spacebar.\r\n                if (event.shiftKey) {\r\n                    this.setConfigEnabled(false);\r\n                    return;\r\n                }\r\n                break;\r\n\r\n            case 37: // left arrow.\r\n                delta[0] -= increment;\r\n                break;\r\n\r\n            case 38: // up arrow.\r\n                delta[1] -= increment;\r\n                break;\r\n\r\n            case 39: // right arrow.\r\n                delta[0] += increment;\r\n                break;\r\n\r\n            case 40: // down arrow.\r\n                delta[1] += increment;\r\n                break;\r\n\r\n            case 67: // c key, toggle crosshairs.\r\n                this.showCrosshairs = !this.showCrosshairs;\r\n                dirty = true;\r\n                break;\r\n            \r\n            case 76: // l key, toggle layer names.\r\n                if (!this.configActive) return;\r\n                this.showLayerNames = !this.showLayerNames;\r\n                dirty = true;\r\n                break;\r\n\r\n            case 83: // s key, solo/unsolo quads.\r\n                if (!this.isLayerSoloed) {\r\n\r\n                    if (this.selectedLayer != null) {\r\n                        for (var i = 0; i < this.layers.length; i++) {\r\n                            this.layers[i].visible = false;\r\n                        }\r\n                        this.selectedLayer.visible = true;\r\n                        dirty = true;\r\n                        this.isLayerSoloed = true;\r\n                    }\r\n                } else {\r\n                    for (var i = 0; i < this.layers.length; i++) {\r\n                        this.layers[i].visible = true;\r\n                    }\r\n                    this.isLayerSoloed = false;\r\n                    dirty = true;\r\n\r\n                }\r\n                break;\r\n\r\n            case 66: // b key, toggle projector bounds rectangle.\r\n                this.showScreenBounds = !this.showScreenBounds;\r\n                this.draw();\r\n                break;\r\n\r\n            case 72: // h key, flip horizontal.\r\n                if (this.selectedLayer) {\r\n                    this.swapLayerPoints(this.selectedLayer.sourcePoints, 0, 1);\r\n                    this.swapLayerPoints(this.selectedLayer.sourcePoints, 3, 2);\r\n                    this.updateTransform();\r\n                    this.draw();\r\n                }\r\n                break;\r\n\r\n            case 86: // v key, flip vertical.\r\n                if (this.selectedLayer) {\r\n                    this.swapLayerPoints(this.selectedLayer.sourcePoints, 0, 3);\r\n                    this.swapLayerPoints(this.selectedLayer.sourcePoints, 1, 2);\r\n                    this.updateTransform();\r\n                    this.draw();\r\n                }\r\n                break;\r\n\r\n            case 82: // r key, rotate 90 degrees.\r\n                if (this.selectedLayer) {\r\n                    this.rotateLayer(this.selectedLayer, Math.PI / 2);\r\n                    //rotateLayer(selectedLayer, 0.002);\r\n                    this.updateTransform();\r\n                    this.draw();\r\n                }\r\n                break;\r\n            case 90: // z key\r\n                if (event.ctrlKey) this.undo();\r\n                break;\r\n\r\n            case 46: // Delete key\r\n            case 8:  // Backspace key\r\n                if (this.selectedLayer) {\r\n                    this.selectedLayer.element.remove();\r\n                    if (this.selectedLayer.overlay) this.selectedLayer.overlay.remove();\r\n                    const index = this.layers.indexOf(this.selectedLayer);\r\n                    if (index >= 0) this.layers.splice(index, 1);\r\n                    this.selectedLayer = null;\r\n                    dirty = true;\r\n                    this.updateTransform();\r\n                    this.draw();\r\n                }\r\n                break;\r\n        }\r\n\r\n        // If a layer or point is selected, add the delta amounts (set above via arrow keys).\r\n        if (!this.showScreenBounds) {\r\n            if (this.selectedPoint) {\r\n                this.selectedPoint[0] += delta[0];\r\n                this.selectedPoint[1] += delta[1];\r\n                dirty = true;\r\n            } else if (this.selectedLayer) {\r\n                if (event.altKey == true) {\r\n                    this.rotateLayer(this.selectedLayer, delta[0] * 0.01);\r\n                    this.scaleLayer(this.selectedLayer, (delta[1] * -0.005) + 1.0);\r\n                } else {\r\n                    for (var i = 0; i < this.selectedLayer.targetPoints.length; i++) {\r\n                        this.selectedLayer.targetPoints[i][0] += delta[0];\r\n                        this.selectedLayer.targetPoints[i][1] += delta[1];\r\n                    }\r\n                }\r\n                dirty = true;\r\n            }\r\n        }\r\n\r\n        // Update the transform and redraw if needed.\r\n        if (dirty) {\r\n            this.updateTransform();\r\n            this.draw();\r\n            if (this.autoSave) this.saveSettings();\r\n            this.pushHistory();\r\n            this.layoutChangeListener();\r\n        }\r\n    };\r\n};\r\n\r\nconst dymoMaptastic = new MLMap({ layers: [] });\r\n\r\ninitUIControls(dymoMaptastic);\r\n\r\n(window as any).MLMap = MLMap;"],
  "mappings": "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",
  "names": ["dymoMaptastic"]
}
